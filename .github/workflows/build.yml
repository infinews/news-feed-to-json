name: Build images and Cleanup ghcr registry
concurrency:
  group: build-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

on:
  push:
    paths:
      - Dockerfile
#    branches:
#      - 'master'
#      - 'main'
  schedule:
    - cron: '0 0 1 * *'

jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
        contents: read
        packages: write
        attestations: write
        id-token: write
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: 'Login to GitHub Container Registry'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}          
      - 
        name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          secrets: |
            GIT_AUTH_TOKEN=${{ secrets.MYTOKEN }}
            push: true
          tags: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:latest
          cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:buildcache
          cache-to: type=registry,ref=ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:buildcache,mode=max
      - 
        name: show images
        run: bash -c "docker pull ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }} &>/dev/null;docker image ls |grep ${{ github.repository_owner }}/${{ github.event.repository.name }}"||true

      - name: Sleep for few seconds
        run: sleep 10
        shell: bash
      - uses: actions/delete-package-versions@v4
        name: delete non-build containers
        with: 
          package-name: "${{ github.event.repository.name }}"
          package-type: 'container'
          min-versions-to-keep: 4
          delete-only-untagged-versions: 'true'
          ignore-versions: '.*(buildcache|baseimage|builder)(|.*)'
          #token: ${{ secrets.PACKAGE_TOKEN }}
          token: ${{ github.token }}